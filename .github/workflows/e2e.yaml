name: E2ETest

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  e2e-test:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          path: src/github.com/kubeflow/katib

      - name: create kind cluster
        uses: helm/kind-action@v1.0.0-rc.1
        with:
          version: v0.8.1
          node_image: kindest/node:v1.18.2
          cluster_name: kind-cluster-v1.18.2
          kubeconfig: /kubeconfig

      - name: setup env
        run: |
          cd src/github.com/kubeflow/katib
          pwd
          go env
          echo "::set-env name=GOPATH::$(go env GOPATH):$GITHUB_WORKSPACE"
          echo "::add-path::$(go env GOPATH)/bin"

      - name: deploy-katib
        run: |
          sudo ln -s /etc/apparmor.d/usr.sbin.mysqld /etc/apparmor.d/disable/
          sudo apparmor_parser -R /etc/apparmor.d/usr.sbin.mysqld
          cd src/github.com/kubeflow/katib
          make deploy
          TIMEOUT=120
          PODNUM=$(kubectl get deploy -n kubeflow | grep -v NAME | wc -l)
          until kubectl get pods -n kubeflow | grep "1/1" | [[ $(wc -l) -eq $PODNUM ]]; do
            echo Pod Status $(kubectl get pods -n kubeflow | grep "1/1" | wc -l)/$PODNUM
            sleep 10
            TIMEOUT=$((TIMEOUT - 1))
            kubectl get pods -n kubeflow
            if [[ $TIMEOUT -eq 0 ]]; then
              echo "NG"
              kubectl get pods -n kubeflow
              exit 1
            fi
          done
          kubectl get pods -n kubeflow

      - name: run-experiment
        run: |
          cd src/github.com/kubeflow/katib
          kubectl create -f examples/v1beta1/random-example.yaml
          kubectl create -f examples/v1beta1/bayesianoptimization-example.yaml
          kubectl create -f examples/v1beta1/cmaes-example.yaml
          kubectl create -f examples/v1beta1/grid-example.yaml
          controller_pod=$(kubectl get pods -n kubeflow | grep katib-controller | awk '{print $1}')
          TIMEOUT=120
          until kubectl get experiment -n kubeflow | grep Succeeded | [[ $(wc -l) -eq 4 ]]; do
            kubectl get experiment -n kubeflow
            kubectl get pods -n kubeflow
            if [[ $TIMEOUT -eq 0 ]]; then
              echo "NG"
              exit 1
            fi
            sleep 10
            TIMEOUT=$((TIMEOUT - 1))
          done
          kubectl get pods -n kubeflow
